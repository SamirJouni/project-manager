{"version":3,"sources":["components/ProjectItem.jsx","components/Projects.jsx","components/AddProject.jsx","components/TodoItem.jsx","components/Todos.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["ProjectItem","props","_props$project","project","id","title","category","react_default","a","createElement","onClick","onDelete","Projects","projectItems","projects","map","i","components_ProjectItem","key","AddProject","defaultProps","onSubmitHandler","categoryOptions","categories","value","onSubmit","e","preventDefault","alert","style","marginBottom","marginTop","type","ref","el","TodoItem","todo","Todos","todoItems","todos","components_TodoItem","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getProjects","setState","uuid","v4","getDefaultProperties","getTodos","fetch","then","response","json","catch","console","log","handleSubmit","toConsumableArray","state","push","handleDelete","filter","p","Fragment","components_AddProject","components_Projects","components_Todos","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.696fcae4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ProjectItem = props => {\r\n\tconst { id, title, category } = props.project;\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<strong>{title}</strong> - {category}{\" \"}\r\n\t\t\t<span onClick={() => props.onDelete(id)}>X</span>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React from \"react\";\r\nimport ProjectItem from \"./ProjectItem\";\r\n\r\nconst Projects = props => {\r\n\tlet projectItems;\r\n\r\n\tif (props.projects) {\r\n\t\tprojectItems = props.projects.map((project, i) => (\r\n\t\t\t<ProjectItem key={i} project={project} onDelete={props.onDelete} />\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>PROJECTS</h2>\r\n\t\t\t{projectItems}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst AddProject = props => {\r\n\tconst { defaultProps, onSubmitHandler } = props;\r\n\r\n\tconst categoryOptions = defaultProps.categories.map((category, i) => (\r\n\t\t<option key={i} value={category}>\r\n\t\t\t{category}\r\n\t\t</option>\r\n\t));\r\n\r\n\tlet title;\r\n\tlet category = defaultProps.categories[0];\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>ADD PROJECT</h2>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tif (title.value) {\r\n\t\t\t\t\t\tonSubmitHandler(title.value, category.value);\r\n\t\t\t\t\t\ttitle.value = \"\";\r\n\t\t\t\t\t\tcategory.value = defaultProps.categories[0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"Title Is Required !\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div style={{marginBottom:'.8rem', marginTop:'1.3rem'}}>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input type=\"text\" ref={el => (title = el)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>Category</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<select ref={el => (category = el)}>{categoryOptions}</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type=\"submit\" value=\"submit\" />\r\n\t\t\t</form>\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddProject;\r\n","import React from \"react\";\r\n\r\nconst TodoItem = props => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<strong>{props.todo.title}</strong>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst Todos = props => {\r\n\tlet todoItems;\r\n\r\n\tif (props.todos) {\r\n\t\ttodoItems = props.todos.map((todo, i) => <TodoItem key={i} todo={todo} />);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>TODOS</h2>\r\n\t\t\t{todoItems}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport Projects from \"../components/Projects\";\r\nimport AddProject from \"../components/AddProject\";\r\nimport Todos from \"../components/Todos\";\r\nimport uuid from \"uuid\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tprojects: [],\r\n\t\t\tdefaultProps: {\r\n\t\t\t\tcategories: []\r\n\t\t\t},\r\n\t\t\ttodos: []\r\n\t\t};\r\n\t}\r\n\r\n\tgetProjects = () => {\r\n\t\tthis.setState({\r\n\t\t\tprojects: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: uuid.v4(),\r\n\t\t\t\t\ttitle: \"business website\",\r\n\t\t\t\t\tcategory: \"web design\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: uuid.v4(),\r\n\t\t\t\t\ttitle: \"social app\",\r\n\t\t\t\t\tcategory: \"mobile development\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: uuid.v4(),\r\n\t\t\t\t\ttitle: \"shopping cart\",\r\n\t\t\t\t\tcategory: \"web development\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\tgetDefaultProperties = () => {\r\n\t\tthis.setState({\r\n\t\t\tdefaultProps: {\r\n\t\t\t\tcategories: [\"Web Design\", \"Web Development\", \"Mobile Development\"]\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tgetTodos = () => {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(todos => this.setState({ todos }))\r\n\t\t\t.catch(console.log);\r\n\t};\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.getProjects();\r\n\t\tthis.getDefaultProperties();\r\n\t\tthis.getTodos();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getProjects();\r\n\t\tthis.getDefaultProperties();\r\n\t\tthis.getTodos();\r\n\t}\r\n\r\n\thandleSubmit = (title, category) => {\r\n\t\tconst projects = [...this.state.projects];\r\n\t\tprojects.push({ id: uuid.v4(), title: title, category: category });\r\n\t\tthis.setState({ projects });\r\n\t};\r\n\r\n\thandleDelete = id => {\r\n\t\tconst projects = this.state.projects.filter(p => p.id !== id);\r\n\t\tthis.setState({ projects });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<AddProject\r\n\t\t\t\t\tdefaultProps={this.state.defaultProps}\r\n\t\t\t\t\tonSubmitHandler={this.handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t\t<Projects projects={this.state.projects} onDelete={this.handleDelete} />\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Todos todos={this.state.todos} />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App/>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}